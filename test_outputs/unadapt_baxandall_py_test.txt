# This scattering matrix was derived using the R-Solver python script (https://github.com/jatinchowdhury18/R-Solver),
# invoked with command: r_solver.py --datum 0 ./netlists/baxandall.txt --verbose --pywdf --out ./test_outputs/unadapt_baxandall_py_test.txt
R.set_S_matrix([[-((Ra*Rb + (Ra - Rb)*Rc)*Rd + (Ra*Rb + (Ra - Rb)*Rc + (Ra - Rb)*Rd)*Re + (Ra*Rb + (Ra - Rb)*Rc + (Ra - Rc)*Rd - (Rb + Rc + Rd)*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                          -2*(Ra*Rc*Rd + Ra*Rc*Rf + (Ra*Rc + Ra*Rd)*Re)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                           2*(Ra*Rb*Rd + Ra*Rb*Re + (Ra*Rb + Ra*Rd)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                               -2*(Ra*Rb*Re - Ra*Rc*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                              2*(Ra*Rb*Rd + (Ra*Rb + Ra*Rc + Ra*Rd)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                             -2*(Ra*Rc*Rd + (Ra*Rb + Ra*Rc + Ra*Rd)*Re)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),],
	[                                                                                         -2*(Rb*Rc*Rd + Rb*Rc*Rf + (Rb*Rc + Rb*Rd)*Re)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf), -((Ra*Rb - (Ra - Rb)*Rc)*Rd + (Ra*Rb - (Ra - Rb)*Rc - (Ra - Rb)*Rd)*Re + (Ra*Rb - (Ra - Rb)*Rc - (Ra + Rc)*Rd + (Rb - Rc - Rd)*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                          -2*(Ra*Rb*Rd + Ra*Rb*Re + (Ra*Rb + Rb*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                              2*(Ra*Rb*Re + (Ra*Rb + Rb*Rc + Rb*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                               -2*(Ra*Rb*Rd - Rb*Rc*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                           -2*((Ra*Rb + Rb*Rc)*Rd + (Rb*Rc + Rb*Rd)*Re)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),],
	[                                                                                          2*(Rb*Rc*Rd + Rb*Rc*Re + (Rb*Rc + Rc*Rd)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                          -2*(Ra*Rc*Rd + Ra*Rc*Re + (Ra*Rc + Rc*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),  ((Ra*Rb - (Ra + Rb)*Rc)*Rd + (Ra*Rb - (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb - (Ra + Rb)*Rc + (Ra - Rc)*Rd + (Rb - Rc + Rd)*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                               2*((Ra + Rb)*Rc*Re + (Ra*Rc + Rc*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                              -2*((Ra + Rb)*Rc*Rd + (Rb*Rc + Rc*Rd)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                               -2*(Ra*Rc*Rd - Rb*Rc*Re)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),],
	[                                                                                                              -2*(Rb*Rd*Re - Rc*Rd*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                               2*(Ra*Rd*Re + ((Ra + Rc)*Rd + Rd*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                               2*((Ra + Rb)*Rd*Re + (Ra*Rd + Rd*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf), -((Ra*Rb + (Ra + Rb)*Rc)*Rd - (Ra*Rb + (Ra + Rb)*Rc - (Ra + Rb)*Rd)*Re - (Ra*Rb + (Ra + Rb)*Rc - (Ra + Rc)*Rd + (Rb + Rc - Rd)*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                              -2*(Rc*Rd*Rf + (Ra*Rb + (Ra + Rb)*Rc)*Rd)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                              -2*(Rb*Rd*Re + (Ra*Rb + (Ra + Rb)*Rc)*Rd)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),],
	[                                                                                                   2*(Rb*Rd*Re + (Rb + Rc + Rd)*Re*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                               -2*(Ra*Rd*Re - Rc*Re*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                 -2*((Ra + Rb)*Rd*Re + (Rb + Rd)*Re*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                              -2*(Rc*Re*Rf + (Ra*Rb + (Ra + Rb)*Rc)*Re)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),  ((Ra*Rb + (Ra + Rb)*Rc)*Rd - (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd - (Rb + Rc + Rd)*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                   -2*(Ra*Rb + (Ra + Rb)*Rc + Ra*Rd)*Re/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),],
	[                                                                                                     -2*(Rc*Rd + (Rb + Rc + Rd)*Re)*Rf/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                    -2*((Ra + Rc)*Rd + (Rc + Rd)*Re)*Rf/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                                  -2*(Ra*Rd - Rb*Re)*Rf/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                   -2*(Ra*Rb + (Ra + Rb)*Rc + Rb*Re)*Rf/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),                                                                                                   -2*(Ra*Rb + (Ra + Rb)*Rc + Ra*Rd)*Rf/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),  ((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re - (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf)/((Ra*Rb + (Ra + Rb)*Rc)*Rd + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rb)*Rd)*Re + (Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Rd + (Rb + Rc + Rd)*Re)*Rf),]]
)